// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.
#pragma once

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include <frc2/command/SubsystemBase.h>
#include "ctre/Phoenix.h"
#include <frc/Encoder.h>
#include <rev/CANSparkMax.h>
#include "subsystems/SwervePod.h"
#include "SwerveMath.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

#define FRONT_RIGHT  0
#define FRONT_LEFT  1
#define BACK_RIGHT  2
#define BACK_LEFT  3

/**
 *
 *
 * @author ExampleAuthor
 */
class SwerveDrive: public frc2::SubsystemBase {
    private:
        // It's desirable that everything possible is private except
        // for methods that implement subsystem capabilities
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

        // rev::SparkMaxAlternateEncoder *m_rightBackEncoder;
        // rev::SparkMaxAlternateEncoder *m_leftBackEncoder;
        // rev::SparkMaxAlternateEncoder *m_rightFrontEncoder;
        // rev::SparkMaxAlternateEncoder *m_leftFrontEncoder; 
        // frc::Encoder m_rightBackEncoder{6, 7, false, frc::Encoder::k4X};
        // frc::Encoder m_leftBackEncoder{4, 5, false, frc::Encoder::k4X};
        // frc::Encoder m_rightFrontEncoder{2, 3, false, frc::Encoder::k4X};
        // frc::Encoder m_leftFrontEncoder{0, 1, false, frc::Encoder::k4X};


        rev::CANSparkMax *m_rightBackBottomMotor;
        rev::CANSparkMax *m_rightBackTopMotor;
        rev::CANSparkMax *m_leftBackBottomMotor;
        rev::CANSparkMax *m_leftBackTopMotor;
        rev::CANSparkMax *m_rightFrontBottomMotor;
        rev::CANSparkMax *m_rightFrontTopMotor;
        rev::CANSparkMax *m_leftFrontBottomMotor;
        rev::CANSparkMax *m_leftFrontTopMotor;


        SwervePod *m_frontLeftPod;
        SwervePod *m_frontRightPod;
        SwervePod *m_backLeftPod;
        SwervePod *m_backRightPod;

        SwerveMath *m_swerveMath;


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public:
        SwerveDrive();

        void Periodic() override;
        void SimulationPeriodic() override;


        // This is meant to take in inputs from the joysticks
        void DrivePods(double forward, double strafe, double rotation, double angle);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

        void initialize();
};

